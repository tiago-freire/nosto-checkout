export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: any }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  IOSanitizedString: any;
  IOUpload: any;
  Upload: any;
};

export type AccountApp = {
  __typename?: 'AccountApp';
  slug?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  vendor?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['String']>;
  registry?: Maybe<Scalars['String']>;
  linked?: Maybe<Scalars['Boolean']>;
  installed?: Maybe<Scalars['Boolean']>;
  contract?: Maybe<Scalars['Boolean']>;
  policies?: Maybe<Array<Maybe<Policy>>>;
  billingOptions?: Maybe<BillingOptions>;
  type?: Maybe<Scalars['String']>;
  brand?: Maybe<Scalars['String']>;
  status?: Maybe<Status>;
  isOnAppStoreCatalog?: Maybe<Scalars['Boolean']>;
};

export type AccountAppsPage = {
  __typename?: 'AccountAppsPage';
  items: Array<AccountApp>;
  pagination?: Maybe<Pagination>;
};

export type AppInformation = {
  __typename?: 'AppInformation';
  id?: Maybe<Scalars['String']>;
  vendor?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  featured?: Maybe<Scalars['Boolean']>;
  categories?: Maybe<Array<Maybe<Scalars['String']>>>;
  registry?: Maybe<Scalars['String']>;
};

export type AppsFilter = {
  search?: Maybe<Scalars['String']>;
  suggested?: Maybe<Scalars['Boolean']>;
  collection?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  installed?: Maybe<Scalars['Boolean']>;
  salesChannel?: Maybe<Scalars['Int']>;
};

export type AppStoreCategory = {
  __typename?: 'AppStoreCategory';
  id: Scalars['Int'];
  name: Scalars['String'];
  path: Scalars['String'];
};

export type AppStoreMeta = {
  __typename?: 'AppStoreMeta';
  locale: Scalars['String'];
  specifications: AppStoreSpecs;
};

export type AppStoreSpecs = {
  __typename?: 'AppStoreSpecs';
  name: Scalars['String'];
  headline: Scalars['String'];
  overview: Scalars['String'];
  features: Array<Scalars['String']>;
  additionalInformation?: Maybe<Scalars['String']>;
  websiteURL?: Maybe<Scalars['String']>;
  metricDescription: Array<MetricDescription>;
};

export type Attrs = {
  __typename?: 'Attrs';
  host?: Maybe<Scalars['String']>;
  path?: Maybe<Scalars['String']>;
};

export type AvailableApp = {
  __typename?: 'AvailableApp';
  id?: Maybe<Scalars['String']>;
  vendor?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  installed?: Maybe<Scalars['Boolean']>;
  installedVersion?: Maybe<Scalars['String']>;
  linked?: Maybe<Scalars['Boolean']>;
  featured?: Maybe<Scalars['Boolean']>;
  categories?: Maybe<Array<Maybe<Scalars['String']>>>;
  fullDescription?: Maybe<LocaleText>;
  shortDescription?: Maybe<LocaleText>;
  installationSteps?: Maybe<LocaleText>;
  screenshots?: Maybe<LocaleArray>;
  registry?: Maybe<Scalars['String']>;
  terms?: Maybe<LocaleText>;
  policies?: Maybe<Array<Maybe<Policy>>>;
  settingsSchema?: Maybe<Scalars['String']>;
  settingsUiSchema?: Maybe<Scalars['String']>;
  billingOptions?: Maybe<BillingOptions>;
  status?: Maybe<Status>;
  type?: Maybe<Scalars['String']>;
  brand?: Maybe<Scalars['String']>;
  licenses?: Maybe<Array<License>>;
  metadata?: Maybe<Metadata>;
  isOnAppStoreCatalog?: Maybe<Scalars['Boolean']>;
};

export type AvailableAppsPage = {
  __typename?: 'AvailableAppsPage';
  items: Array<AvailableApp>;
  pagination?: Maybe<Pagination>;
};

export type Billing = {
  __typename?: 'Billing';
  taxClassification?: Maybe<Scalars['String']>;
  items?: Maybe<Array<Maybe<CalculationItem>>>;
};

export type BillingOptions = {
  __typename?: 'BillingOptions';
  /** Legacy fields */
  version?: Maybe<Scalars['String']>;
  free?: Maybe<Scalars['Boolean']>;
  policies?: Maybe<Array<Maybe<BillingPolicy>>>;
  deactivationRoute?: Maybe<Scalars['String']>;
  setupRoute?: Maybe<Scalars['String']>;
  termsURL?: Maybe<Scalars['String']>;
  /** New fields */
  support?: Maybe<Support>;
  type?: Maybe<Scalars['String']>;
  availableCountries?: Maybe<Array<Scalars['String']>>;
  plans?: Maybe<Array<Plan>>;
};

export type BillingPolicy = {
  __typename?: 'BillingPolicy';
  plan?: Maybe<Scalars['String']>;
  currency?: Maybe<Scalars['String']>;
  billing?: Maybe<Billing>;
};

export type CalculatedByMetricUnit = {
  __typename?: 'CalculatedByMetricUnit';
  metricId?: Maybe<Scalars['String']>;
  metricName?: Maybe<Scalars['String']>;
  minChargeValue?: Maybe<Scalars['Float']>;
  ranges?: Maybe<Array<Maybe<Range>>>;
  route?: Maybe<Scalars['String']>;
};

export type CalculationItem = {
  __typename?: 'CalculationItem';
  itemCurrency?: Maybe<Scalars['String']>;
  fixed?: Maybe<Scalars['Float']>;
  calculatedByMetricUnit?: Maybe<CalculatedByMetricUnit>;
};

export type CollectionProduct = {
  __typename?: 'CollectionProduct';
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type GenericResponse = {
  __typename?: 'GenericResponse';
  message?: Maybe<Scalars['String']>;
};

export type InstalledApp = {
  __typename?: 'InstalledApp';
  id?: Maybe<Scalars['ID']>;
  cacheId?: Maybe<Scalars['String']>;
  fullId?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  vendor?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
  fullVersion?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['String']>;
  registry?: Maybe<Scalars['String']>;
  linked?: Maybe<Scalars['Boolean']>;
  contract?: Maybe<Scalars['Boolean']>;
  source?: Maybe<Scalars['String']>;
};

export type InstalledAppsPage = {
  __typename?: 'InstalledAppsPage';
  items: Array<InstalledApp>;
  pagination?: Maybe<Pagination>;
};

export type Interval = {
  from?: Maybe<Scalars['Int']>;
  to?: Maybe<Scalars['Int']>;
};



export type License = {
  __typename?: 'License';
  locale: Scalars['String'];
  content: Scalars['String'];
};

export type LocaleArray = {
  __typename?: 'LocaleArray';
  en?: Maybe<Array<Maybe<Scalars['String']>>>;
  pt?: Maybe<Array<Maybe<Scalars['String']>>>;
  es?: Maybe<Array<Maybe<Scalars['String']>>>;
};

export type LocaleText = {
  __typename?: 'LocaleText';
  en?: Maybe<Scalars['String']>;
  pt?: Maybe<Scalars['String']>;
  es?: Maybe<Scalars['String']>;
};

export type Metadata = {
  __typename?: 'Metadata';
  messages: Array<AppStoreMeta>;
};

export type MetricDescription = {
  __typename?: 'MetricDescription';
  metricId: Scalars['String'];
  metricName: Scalars['String'];
};

export type Mutation = {
  __typename?: 'Mutation';
  installApp?: Maybe<GenericResponse>;
  uninstallApp?: Maybe<GenericResponse>;
  saveAppSettings?: Maybe<GenericResponse>;
  createWorkspace?: Maybe<GenericResponse>;
  deleteWorkspace?: Maybe<GenericResponse>;
  resetWorkspace?: Maybe<GenericResponse>;
  promoteWorkspace?: Maybe<Scalars['Boolean']>;
};


export type MutationInstallAppArgs = {
  registry?: Maybe<Scalars['String']>;
  app?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
  termsOfUseAccepted?: Maybe<Scalars['Boolean']>;
  force?: Maybe<Scalars['Boolean']>;
};


export type MutationUninstallAppArgs = {
  app?: Maybe<Scalars['String']>;
};


export type MutationSaveAppSettingsArgs = {
  app?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
  settings?: Maybe<Scalars['String']>;
};


export type MutationCreateWorkspaceArgs = {
  account?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};


export type MutationDeleteWorkspaceArgs = {
  account?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};


export type MutationResetWorkspaceArgs = {
  account?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};


export type MutationPromoteWorkspaceArgs = {
  account?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
  createWorkspace?: Maybe<Scalars['Boolean']>;
};

export type Pagination = {
  __typename?: 'Pagination';
  from: Scalars['Int'];
  to: Scalars['Int'];
  pageSize: Scalars['Int'];
  total: Scalars['Int'];
};

export type Plan = {
  __typename?: 'Plan';
  id: Scalars['String'];
  currency: Scalars['String'];
  price: Price;
};

export type Policy = {
  __typename?: 'Policy';
  name?: Maybe<Scalars['String']>;
  attrs?: Maybe<Attrs>;
};

export type Price = {
  __typename?: 'Price';
  subscription?: Maybe<Scalars['Float']>;
  metrics?: Maybe<Array<PriceMetric>>;
};

export type PriceMetric = {
  __typename?: 'PriceMetric';
  id: Scalars['String'];
  ranges: Array<Range>;
  customUrl?: Maybe<Scalars['String']>;
};

export type Query = {
  __typename?: 'Query';
  availableApps?: Maybe<Array<Maybe<AppInformation>>>;
  availableApp?: Maybe<AvailableApp>;
  availableAppsAdmin?: Maybe<Array<Maybe<AppInformation>>>;
  availableAppAdmin?: Maybe<AvailableApp>;
  installedApps?: Maybe<InstalledAppsPage>;
  installedApp?: Maybe<InstalledApp>;
  installedAppPublic?: Maybe<InstalledApp>;
  appSettings?: Maybe<GenericResponse>;
  publicSettingsForApp?: Maybe<GenericResponse>;
  appsDependencies?: Maybe<GenericResponse>;
  workspaces?: Maybe<Array<Maybe<Workspace>>>;
  accountApps?: Maybe<AccountAppsPage>;
  storeApps?: Maybe<AvailableAppsPage>;
  appStoreCategories: Array<AppStoreCategory>;
};


export type QueryAvailableAppsArgs = {
  registry?: Maybe<Scalars['String']>;
  categories?: Maybe<Array<Maybe<Scalars['String']>>>;
};


export type QueryAvailableAppArgs = {
  id: Scalars['String'];
};


export type QueryAvailableAppsAdminArgs = {
  registry?: Maybe<Scalars['String']>;
  categories?: Maybe<Array<Maybe<Scalars['String']>>>;
};


export type QueryAvailableAppAdminArgs = {
  id: Scalars['String'];
};


export type QueryInstalledAppsArgs = {
  interval?: Maybe<Interval>;
  filter?: Maybe<AppsFilter>;
};


export type QueryInstalledAppArgs = {
  slug: Scalars['String'];
};


export type QueryInstalledAppPublicArgs = {
  slug: Scalars['String'];
};


export type QueryAppSettingsArgs = {
  app?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
};


export type QueryPublicSettingsForAppArgs = {
  app?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['String']>;
};


export type QueryAppsDependenciesArgs = {
  filter?: Maybe<Scalars['String']>;
};


export type QueryWorkspacesArgs = {
  account?: Maybe<Scalars['String']>;
};


export type QueryAccountAppsArgs = {
  interval?: Maybe<Interval>;
  filter?: Maybe<AppsFilter>;
};


export type QueryStoreAppsArgs = {
  interval?: Maybe<Interval>;
  filter?: Maybe<AppsFilter>;
};

export type Range = {
  __typename?: 'Range';
  exclusiveFrom?: Maybe<Scalars['Int']>;
  inclusiveTo?: Maybe<Scalars['Int']>;
  multiplier?: Maybe<Scalars['Float']>;
};

export type Status = 
  | 'COMINGSOON'
  | 'PUBLISHED';

export type Support = {
  __typename?: 'Support';
  email?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  phhone?: Maybe<Scalars['String']>;
};


export type Workspace = {
  __typename?: 'Workspace';
  name?: Maybe<Scalars['String']>;
};

export {}